{"version":3,"sources":["views/Register/RegisterView.js"],"names":["Register","useState","name","setName","email","setEmail","password","setPasssword","dispatch","useDispatch","handleChange","e","target","value","reset","className","css","container","onSubmit","preventDefault","authOperations","register","form","labelField","label","type","onChange","autoComplete","input","formBtn"],"mappings":"iNA+EeA,UA1Ef,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAiCJ,mBAAS,IAA1C,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,cAEXC,EAAe,SAACC,GACpB,OAAQA,EAAEC,OAAOV,MACf,IAAK,OACH,OAAOC,EAAQQ,EAAEC,OAAOC,OAC1B,IAAK,QACH,OAAOR,EAASM,EAAEC,OAAOC,OAC3B,IAAK,WACH,OAAON,EAAaI,EAAEC,OAAOC,OAC/B,QACE,SASAC,EAAQ,WACZX,EAAQ,IACRE,EAAS,IACTE,EAAa,KAGf,OACE,qBAAKQ,UAAWC,IAAIC,UAApB,SACE,uBAAMC,SAdW,SAACP,GACpBA,EAAEQ,iBACFX,EAASY,IAAeC,SAAS,CAAEnB,OAAME,QAAOE,cAEhDQ,KAUgCC,UAAWC,IAAIM,KAA7C,UACE,wBAAOP,UAAWC,IAAIO,WAAtB,UACE,sBAAMR,UAAWC,IAAIQ,MAArB,kBACA,uBACEC,KAAK,OACLvB,KAAK,OACLW,MAAOX,EACPwB,SAAUhB,EACViB,aAAa,MACbZ,UAAWC,IAAIY,WAGnB,wBAAOb,UAAWC,IAAIO,WAAtB,UACE,sBAAMR,UAAWC,IAAIQ,MAArB,mBACA,uBACEC,KAAK,QACLvB,KAAK,QACLW,MAAOT,EACPsB,SAAUhB,EACViB,aAAa,MACbZ,UAAWC,IAAIY,WAGnB,wBAAOb,UAAWC,IAAIO,WAAtB,UACE,sBAAMR,UAAWC,IAAIQ,MAArB,sBACA,uBACEC,KAAK,WACLvB,KAAK,WACLW,MAAOP,EACPoB,SAAUhB,EACVK,UAAWC,IAAIY,WAGnB,wBAAQH,KAAK,SAASV,UAAWC,IAAIa,QAArC","file":"static/js/register-view.b58d1c69.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport authOperations from \"../../redux/auth/auth-operations\";\nimport css from \"../../components/form/form.module.css\";\n\nfunction Register() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPasssword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        return setName(e.target.value);\n      case \"email\":\n        return setEmail(e.target.value);\n      case \"password\":\n        return setPasssword(e.target.value);\n      default:\n        return;\n    }\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n\n    reset();\n  };\n  const reset = () => {\n    setName(\"\");\n    setEmail(\"\");\n    setPasssword(\"\");\n  };\n\n  return (\n    <div className={css.container}>\n      <form onSubmit={handleSubmit} className={css.form}>\n        <label className={css.labelField}>\n          <span className={css.label}>Name</span>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            autoComplete=\"off\"\n            className={css.input}\n          />\n        </label>\n        <label className={css.labelField}>\n          <span className={css.label}>Email</span>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            autoComplete=\"off\"\n            className={css.input}\n          />\n        </label>\n        <label className={css.labelField}>\n          <span className={css.label}>Password</span>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            className={css.input}\n          />\n        </label>\n        <button type=\"submit\" className={css.formBtn}>\n          Register\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n"],"sourceRoot":""}